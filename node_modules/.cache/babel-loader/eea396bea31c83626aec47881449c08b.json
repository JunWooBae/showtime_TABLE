{"ast":null,"code":"var _jsxFileName = \"/Users/joohye/mandal-art/src/components/mandalArt/MandalArtTable.js\";\nimport React, { Component } from 'react';\nimport { List } from 'immutable';\nimport * as firebase from \"firebase\";\n\nclass MandalArtTable extends Component {\n  componentDidMount() {\n    console.log(this.props.match.params.id);\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.onChange = (e, tableIndex, dataIndex) => {\n      const value = e.target.value; // let copyValues = [...this.state.MandalArtData];\n      // copyValues[tableIndex][dataIndex] = value;\n      // this.setState({MandalArtData : copyValues});\n\n      const data = this.state.MandalArtData;\n      let goal;\n\n      if (tableIndex === 4) {\n        goal = data.setIn([dataIndex, tableIndex], value).setIn([tableIndex, dataIndex], value);\n      } else if (dataIndex === 4) {\n        goal = data.setIn([dataIndex, tableIndex], value).setIn([tableIndex, dataIndex], value);\n      } else {\n        goal = data.setIn([tableIndex, dataIndex], value);\n      }\n\n      this.setState({\n        MandalArtData: goal\n      });\n    };\n\n    this.onSave = (e, uid) => {\n      e.preventDefault();\n      let database = firebase.database();\n      let time = new Date();\n      let date = `${time.getFullYear()}년 ${time.getMonth() + 1}월 ${time.getDate()}일 ${time.getHours()}:${time.getMinutes()}:${time.getSeconds()}`; // console.log(date);\n\n      database.ref(`mandal/${uid}/`).push({\n        data: JSON.stringify(this.state.MandalArtData),\n        time: date\n      }); // database.ref(`mandal/${uid}/`).push({\"data\": JSON.stringify(this.state.MandalArtData)});\n      //데이터베이스에 mandalArt 값 넣고\n      //List에서 데이터가 몇개 있는지 확인 필요.\n    };\n\n    this.onPrint = () => {\n      window.print();\n    };\n\n    this.onPlaceholder = (tableIndex, dataIndex) => {\n      if (tableIndex === 4) {\n        if (dataIndex === 4) {\n          return '최종목표';\n        } else {\n          return '목표';\n        }\n      } else if (dataIndex === 4) {\n        return '목표';\n      }\n    };\n\n    this.state = {\n      // MandalArtData: [\n      //     [1, 2, 3, 4, 5, 6, 7, 8, 9],\n      //     [1, 2, 3, 4, 5, 6, 7, 8, 9],\n      //     [1, 2, 3, 4, 5, 6, 7, 8, 9],\n      //     ['하이', 2, 3, 4, 5, 6, 7, 8, 9],\n      //     [1, 2, 3, 4, 5, 6, 7, 8, 9],\n      //     [1, 2, 3, 4, 5, 6, 7, 8, 9],\n      //     [1, 2, 3, 4, 5, 6, 7, 8, 9],\n      //     [1, 2, 3, 4, 5, 6, 7, 8, 9],\n      //     [1, 2, 3, 4, 5, 6, 7, 8, 9]\n      // ],\n      MandalArtData: List([List(['', '', '', '', '', '', '', '', '']), List(['', '', '', '', '', '', '', '', '']), List(['', '', '', '', '', '', '', '', '']), List(['', '', '', '', '', '', '', '', '']), List(['', '', '', '', '', '', '', '', '']), List(['', '', '', '', '', '', '', '', '']), List(['', '', '', '', '', '', '', '', '']), List(['', '', '', '', '', '', '', '', '']), List(['', '', '', '', '', '', '', '', ''])])\n    };\n  }\n\n  render() {\n    return React.createElement(\"section\", {\n      className: \"mandal-section\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"grid outer-grid justify-between\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, this.state.MandalArtData.map((table, tableIndex) => {\n      return React.createElement(\"div\", {\n        className: \"grid inner-grid justify-between items-center\",\n        key: tableIndex,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, table.map((data, dataIndex) => {\n        return React.createElement(\"input\", {\n          className: \"mandal-input\",\n          key: [dataIndex, tableIndex].join('_'),\n          placeholder: this.onPlaceholder(tableIndex, dataIndex),\n          value: data,\n          onChange: e => this.onChange(e, tableIndex, dataIndex),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        });\n      }));\n    })), React.createElement(\"div\", {\n      className: \"flex justify-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: e => this.onSave(e, JSON.parse(localStorage.getItem('logInfo')).user.uid),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"\\uC800\\uC7A5\\uD558\\uAE30\")), React.createElement(\"div\", {\n      className: \"flex justify-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.onPrint,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"\\uD504\\uB9B0\\uD2B8\\uD558\\uAE30\")));\n  }\n\n}\n\nexport default MandalArtTable;","map":{"version":3,"sources":["/Users/joohye/mandal-art/src/components/mandalArt/MandalArtTable.js"],"names":["React","Component","List","firebase","MandalArtTable","componentDidMount","console","log","props","match","params","id","constructor","onChange","e","tableIndex","dataIndex","value","target","data","state","MandalArtData","goal","setIn","setState","onSave","uid","preventDefault","database","time","Date","date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","ref","push","JSON","stringify","onPrint","window","print","onPlaceholder","render","map","table","join","parse","localStorage","getItem","user"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {List} from 'immutable';\nimport * as firebase from \"firebase\";\n\n\nclass MandalArtTable extends Component {\n    componentDidMount() {\n\n        console.log(this.props.match.params.id);\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            // MandalArtData: [\n            //     [1, 2, 3, 4, 5, 6, 7, 8, 9],\n            //     [1, 2, 3, 4, 5, 6, 7, 8, 9],\n            //     [1, 2, 3, 4, 5, 6, 7, 8, 9],\n            //     ['하이', 2, 3, 4, 5, 6, 7, 8, 9],\n            //     [1, 2, 3, 4, 5, 6, 7, 8, 9],\n            //     [1, 2, 3, 4, 5, 6, 7, 8, 9],\n            //     [1, 2, 3, 4, 5, 6, 7, 8, 9],\n            //     [1, 2, 3, 4, 5, 6, 7, 8, 9],\n            //     [1, 2, 3, 4, 5, 6, 7, 8, 9]\n            // ],\n            MandalArtData: List([\n                    List(['', '', '', '', '', '', '', '', '']),\n                    List(['', '', '', '', '', '', '', '', '']),\n                    List(['', '', '', '', '', '', '', '', '']),\n                    List(['', '', '', '', '', '', '', '', '']),\n                    List(['', '', '', '', '', '', '', '', '']),\n                    List(['', '', '', '', '', '', '', '', '']),\n                    List(['', '', '', '', '', '', '', '', '']),\n                    List(['', '', '', '', '', '', '', '', '']),\n                    List(['', '', '', '', '', '', '', '', '']),\n                ]\n            )\n        }\n    }\n\n    onChange = (e, tableIndex, dataIndex) => {\n        const {value} = e.target;\n        // let copyValues = [...this.state.MandalArtData];\n        // copyValues[tableIndex][dataIndex] = value;\n        // this.setState({MandalArtData : copyValues});\n\n        const data = this.state.MandalArtData;\n\n        let goal;\n\n        if (tableIndex === 4) {\n            goal = data.setIn([dataIndex, tableIndex], value).setIn([tableIndex, dataIndex], value);\n        } else if (dataIndex === 4) {\n            goal = data.setIn([dataIndex, tableIndex], value).setIn([tableIndex, dataIndex], value);\n        } else {\n            goal = data.setIn([tableIndex, dataIndex], value);\n        }\n\n        this.setState({MandalArtData: goal});\n    }\n\n    onSave = (e, uid) => {\n        e.preventDefault();\n\n        let database = firebase.database();\n\n        let time=new Date();\n        let date=`${time.getFullYear()}년 ${time.getMonth()+1}월 ${time.getDate()}일 ${time.getHours()}:${time.getMinutes()}:${time.getSeconds()}`;\n\n        // console.log(date);\n        database.ref(`mandal/${uid}/`).push({\n            data: JSON.stringify(this.state.MandalArtData),\n            time: date\n        });\n\n\n        // database.ref(`mandal/${uid}/`).push({\"data\": JSON.stringify(this.state.MandalArtData)});\n\n        //데이터베이스에 mandalArt 값 넣고\n        //List에서 데이터가 몇개 있는지 확인 필요.\n    }\n\n    onPrint = () => {\n        window.print();\n    }\n\n    onPlaceholder = (tableIndex, dataIndex) => {\n        if (tableIndex === 4) {\n            if (dataIndex === 4) {\n                return '최종목표';\n            } else {\n                return '목표';\n            }\n        } else if (dataIndex === 4) {\n            return '목표';\n        }\n    }\n\n    render() {\n        return (\n            <section className=\"mandal-section\">\n                <div className=\"grid outer-grid justify-between\">\n                    {this.state.MandalArtData.map((table, tableIndex) => {\n                        return (\n                            <div className=\"grid inner-grid justify-between items-center\" key={tableIndex}>\n                                {table.map((data, dataIndex) => {\n                                    return (\n                                        <input className=\"mandal-input\" key={[dataIndex, tableIndex].join('_')}\n                                               placeholder={this.onPlaceholder(tableIndex, dataIndex)} value={data}\n                                               onChange={(e) => this.onChange(e, tableIndex, dataIndex)}/>\n                                    );\n                                })}\n                            </div>\n                        );\n                    })}\n                </div>\n\n                <div className=\"flex justify-center\">\n                    <button onClick={(e) => this.onSave(e, JSON.parse(localStorage.getItem('logInfo')).user.uid)}>저장하기\n                    </button>\n                </div>\n                <div className=\"flex justify-center\">\n                    <button onClick={this.onPrint}>프린트하기</button>\n                </div>\n\n            </section>\n        );\n    }\n}\n\nexport default MandalArtTable;"]},"metadata":{},"sourceType":"module"}