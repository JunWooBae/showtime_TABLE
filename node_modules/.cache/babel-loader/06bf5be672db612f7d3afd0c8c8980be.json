{"ast":null,"code":"var _jsxFileName = \"/Users/joohye/mandal-art/src/components/auth/Sign.js\";\nimport React, { Component } from 'react';\nimport firebase from '../../firebase';\nexport default class Sign extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onLogin = () => {\n      var provider = new firebase.auth.GoogleAuthProvider();\n      firebase.auth().signInWithPopup(provider).then(function (result) {\n        // This gives you a Google Access Token. You can use it to access the Google API.\n        var token = result.credential.accessToken; // The signed-in user info.\n\n        var user = result.user; // ...\n      }).catch(function (error) {\n        // Handle Errors here.\n        var errorCode = error.code;\n        var errorMessage = error.message; // The email of the user's account used.\n\n        var email = error.email; // The firebase.auth.AuthCredential type that was used.\n\n        var credential = error.credential; // ...\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"button\", {\n      onClick: this.onLogin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"\\uAD6C\\uAE00 \\uB85C\\uADF8\\uC778\");\n  }\n\n}","map":{"version":3,"sources":["/Users/joohye/mandal-art/src/components/auth/Sign.js"],"names":["React","Component","firebase","Sign","onLogin","provider","auth","GoogleAuthProvider","signInWithPopup","then","result","token","credential","accessToken","user","catch","error","errorCode","code","errorMessage","message","email","render"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAOC,QAAP,MAAqB,gBAArB;AAEA,eAAe,MAAMC,IAAN,SAAmBF,SAAnB,CAA4B;AAAA;AAAA;;AAAA,SAEvCG,OAFuC,GAE/B,MAAI;AACR,UAAIC,QAAQ,GAAG,IAAIH,QAAQ,CAACI,IAAT,CAAcC,kBAAlB,EAAf;AAEAL,MAAAA,QAAQ,CAACI,IAAT,GAAgBE,eAAhB,CAAgCH,QAAhC,EAA0CI,IAA1C,CAA+C,UAASC,MAAT,EAAiB;AAC5D;AACA,YAAIC,KAAK,GAAGD,MAAM,CAACE,UAAP,CAAkBC,WAA9B,CAF4D,CAG5D;;AACA,YAAIC,IAAI,GAAGJ,MAAM,CAACI,IAAlB,CAJ4D,CAK5D;AACH,OAND,EAMGC,KANH,CAMS,UAASC,KAAT,EAAgB;AACrB;AACA,YAAIC,SAAS,GAAGD,KAAK,CAACE,IAAtB;AACA,YAAIC,YAAY,GAAGH,KAAK,CAACI,OAAzB,CAHqB,CAIrB;;AACA,YAAIC,KAAK,GAAGL,KAAK,CAACK,KAAlB,CALqB,CAMrB;;AACA,YAAIT,UAAU,GAAGI,KAAK,CAACJ,UAAvB,CAPqB,CAQrB;AACH,OAfD;AAgBH,KArBsC;AAAA;;AAuBvCU,EAAAA,MAAM,GAAE;AACJ,WACI;AAAQ,MAAA,OAAO,EAAE,KAAKlB,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCADJ;AAGH;;AA3BsC","sourcesContent":["import React,{Component} from 'react';\nimport firebase from '../../firebase';\n\nexport default class Sign extends Component{\n\n    onLogin=()=>{\n        var provider = new firebase.auth.GoogleAuthProvider();\n\n        firebase.auth().signInWithPopup(provider).then(function(result) {\n            // This gives you a Google Access Token. You can use it to access the Google API.\n            var token = result.credential.accessToken;\n            // The signed-in user info.\n            var user = result.user;\n            // ...\n        }).catch(function(error) {\n            // Handle Errors here.\n            var errorCode = error.code;\n            var errorMessage = error.message;\n            // The email of the user's account used.\n            var email = error.email;\n            // The firebase.auth.AuthCredential type that was used.\n            var credential = error.credential;\n            // ...\n        });\n    }\n\n    render(){\n        return(\n            <button onClick={this.onLogin} >구글 로그인</button>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}