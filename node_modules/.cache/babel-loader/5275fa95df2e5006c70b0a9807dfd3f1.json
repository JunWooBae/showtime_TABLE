{"ast":null,"code":"var _jsxFileName = \"/Users/joohye/mandal-art/src/components/auth/Sign.js\";\nimport React, { Component } from 'react';\nimport * as firebase from \"firebase\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport { connect } from 'react-redux';\nimport { Auth } from '../../redux/action';\n\nclass Sign extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onLogin = e => {\n      e.preventDefault();\n      firebase.auth().setPersistence(firebase.auth.Auth.Persistence.NONE).then(() => {\n        var provider = new firebase.auth.GoogleAuthProvider(); // In memory persistence will be applied to the signed in Google user\n        // even though the persistence was set to 'none' and a page redirect\n        // occurred.\n\n        return firebase.auth().signInWithPopup(provider).then(authData => {\n          console.log(authData);\n          this.setState({\n            token: authData.credential.accessToken,\n            displayName: authData.user.displayName\n          });\n        });\n      }).catch(error => {\n        // Handle Errors here.\n        var errorCode = error.code;\n        var errorMessage = error.message;\n      });\n    };\n\n    this.onLogout = e => {\n      e.preventDefault();\n      firebase.auth().signOut().then(() => {\n        this.setState({\n          token: null,\n          displayName: null\n        }); // this.connect(state => ({ token:null, displayName:null }))(Sign);\n      }).catch(function (error) {// An error happened.\n      });\n    };\n\n    this.state = {\n      token: null,\n      displayName: null\n    };\n  }\n\n  componentDidMount() {}\n\n  render() {\n    const _this$props = this.props,\n          token = _this$props.token,\n          displayName = _this$props.displayName;\n    console.log(this.props);\n    return React.createElement(\"section\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, this.state.displayName, \"\\uB2D8 \\uD658\\uC601\\uD569\\uB2C8\\uB2E4!\"), React.createElement(\"button\", {\n      onClick: this.onLogin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"\\uAD6C\\uAE00 \\uB85C\\uADF8\\uC778\"), React.createElement(\"button\", {\n      onClick: this.onLogout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"\\uAD6C\\uAE00 \\uB85C\\uADF8\\uC544\\uC6C3\"));\n  }\n\n}\n\nexport default connect(state => ({\n  token: state.token,\n  displayName: state.displayName\n}))(Sign);","map":{"version":3,"sources":["/Users/joohye/mandal-art/src/components/auth/Sign.js"],"names":["React","Component","firebase","connect","Auth","Sign","constructor","props","onLogin","e","preventDefault","auth","setPersistence","Persistence","NONE","then","provider","GoogleAuthProvider","signInWithPopup","authData","console","log","setState","token","credential","accessToken","displayName","user","catch","error","errorCode","code","errorMessage","message","onLogout","signOut","state","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,KAAKC,QAAZ,MAA0B,UAA1B;AACA,OAAO,eAAP;AACA,OAAO,oBAAP;AAEA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,IAAR,QAAmB,oBAAnB;;AAEA,MAAMC,IAAN,SAAmBJ,SAAnB,CAA6B;AACzBK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAWnBC,OAXmB,GAWRC,CAAD,IAAO;AACbA,MAAAA,CAAC,CAACC,cAAF;AACAR,MAAAA,QAAQ,CAACS,IAAT,GAAgBC,cAAhB,CAA+BV,QAAQ,CAACS,IAAT,CAAcP,IAAd,CAAmBS,WAAnB,CAA+BC,IAA9D,EACKC,IADL,CACU,MAAM;AACR,YAAIC,QAAQ,GAAG,IAAId,QAAQ,CAACS,IAAT,CAAcM,kBAAlB,EAAf,CADQ,CAER;AACA;AACA;;AACA,eAAOf,QAAQ,CAACS,IAAT,GAAgBO,eAAhB,CAAgCF,QAAhC,EACFD,IADE,CACII,QAAD,IAAc;AAChBC,UAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,eAAKG,QAAL,CAAc;AACVC,YAAAA,KAAK,EAAEJ,QAAQ,CAACK,UAAT,CAAoBC,WADjB;AAEVC,YAAAA,WAAW,EAAEP,QAAQ,CAACQ,IAAT,CAAcD;AAFjB,WAAd;AAIH,SAPE,CAAP;AAQH,OAdL,EAeKE,KAfL,CAeYC,KAAD,IAAW;AACd;AACA,YAAIC,SAAS,GAAGD,KAAK,CAACE,IAAtB;AACA,YAAIC,YAAY,GAAGH,KAAK,CAACI,OAAzB;AACH,OAnBL;AAoBH,KAjCkB;;AAAA,SAmCnBC,QAnCmB,GAmCPzB,CAAD,IAAO;AACdA,MAAAA,CAAC,CAACC,cAAF;AACAR,MAAAA,QAAQ,CAACS,IAAT,GAAgBwB,OAAhB,GAA0BpB,IAA1B,CAA+B,MAAM;AACjC,aAAKO,QAAL,CAAc;AACVC,UAAAA,KAAK,EAAE,IADG;AAEVG,UAAAA,WAAW,EAAE;AAFH,SAAd,EADiC,CAKjC;AACH,OAND,EAMGE,KANH,CAMS,UAAUC,KAAV,EAAiB,CACtB;AACH,OARD;AASH,KA9CkB;;AAEf,SAAKO,KAAL,GAAa;AACTb,MAAAA,KAAK,EAAE,IADE;AAETG,MAAAA,WAAW,EAAE;AAFJ,KAAb;AAIH;;AACDW,EAAAA,iBAAiB,GAAE,CAElB;;AAuCDC,EAAAA,MAAM,GAAG;AAAA,wBACwB,KAAK/B,KAD7B;AAAA,UACEgB,KADF,eACEA,KADF;AAAA,UACSG,WADT,eACSA,WADT;AAELN,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKd,KAAjB;AAEA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,KAAK6B,KAAL,CAAWV,WAAjB,2CADJ,EAGI;AAAQ,MAAA,OAAO,EAAE,KAAKlB,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAHJ,EAII;AAAQ,MAAA,OAAO,EAAE,KAAK0B,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAJJ,CADJ;AASH;;AA9DwB;;AAiE7B,eAAe/B,OAAO,CAACiC,KAAK,KAAK;AAACb,EAAAA,KAAK,EAAEa,KAAK,CAACb,KAAd;AAAqBG,EAAAA,WAAW,EAAEU,KAAK,CAACV;AAAxC,CAAL,CAAN,CAAP,CAAyErB,IAAzE,CAAf","sourcesContent":["import React, {Component} from 'react';\nimport * as firebase from \"firebase\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n\nimport {connect} from 'react-redux';\nimport {Auth} from '../../redux/action';\n\nclass Sign extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            token: null,\n            displayName: null\n        }\n    }\n    componentDidMount(){\n        \n    }\n\n    onLogin = (e) => {\n        e.preventDefault();\n        firebase.auth().setPersistence(firebase.auth.Auth.Persistence.NONE)\n            .then(() => {\n                var provider = new firebase.auth.GoogleAuthProvider();\n                // In memory persistence will be applied to the signed in Google user\n                // even though the persistence was set to 'none' and a page redirect\n                // occurred.\n                return firebase.auth().signInWithPopup(provider)\n                    .then((authData) => {\n                        console.log(authData);\n                        this.setState({\n                            token: authData.credential.accessToken,\n                            displayName: authData.user.displayName\n                        });\n                    });\n            })\n            .catch((error) => {\n                // Handle Errors here.\n                var errorCode = error.code;\n                var errorMessage = error.message;\n            });\n    }\n\n    onLogout = (e) => {\n        e.preventDefault();\n        firebase.auth().signOut().then(() => {\n            this.setState({\n                token: null,\n                displayName: null\n            });\n            // this.connect(state => ({ token:null, displayName:null }))(Sign);\n        }).catch(function (error) {\n            // An error happened.\n        });\n    }\n\n    render() {\n        const {token, displayName} = this.props;\n        console.log(this.props);\n\n        return (\n            <section>\n                <div>{this.state.displayName}님 환영합니다!</div>\n\n                <button onClick={this.onLogin}>구글 로그인</button>\n                <button onClick={this.onLogout}>구글 로그아웃</button>\n\n            </section>\n        );\n    }\n}\n\nexport default connect(state => ({token: state.token, displayName: state.displayName}))(Sign);\n"]},"metadata":{},"sourceType":"module"}