{"ast":null,"code":"var _jsxFileName = \"/Users/joohye/mandal-art/src/components/MandalArtTable.js\";\nimport React, { Component } from 'react';\n\nclass MandalArtTable extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = (tableIndex, dataIndex, e) => {\n      const value = e.target.value;\n      let copyValues = this.state.MandalArtData.slice(); // make the changes to the copied array\n\n      copyValues[tableIndex][dataIndex] = value; //false or whatever\n\n      this.setState({\n        MandalArtData: copyValues\n      });\n    };\n\n    this.state = {\n      MandalArtData: [[1, 2, 3, 4, 5, 6, 7, 8, 9], [1, 2, 3, 4, 5, 6, 7, 8, 9], [1, 2, 3, 4, 5, 6, 7, 8, 9], ['하이', 2, 3, 4, 5, 6, 7, 8, 9], [1, 2, 3, 4, 5, 6, 7, 8, 9], [1, 2, 3, 4, 5, 6, 7, 8, 9], [1, 2, 3, 4, 5, 6, 7, 8, 9], [1, 2, 3, 4, 5, 6, 7, 8, 9], [1, 2, 3, 4, 5, 6, 7, 8, 9]]\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"grid outer-grid justify-between\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, this.state.MandalArtData.map((table, tableIndex) => {\n      return React.createElement(\"div\", {\n        className: \"grid inner-grid justify-between items-center\",\n        key: tableIndex + Math.random(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, table.map((data, dataIndex) => {\n        return React.createElement(\"input\", {\n          className: \"mandal-input\",\n          key: data + dataIndex + tableIndex,\n          placeholder: \"\\uBAA9\\uD45C\",\n          value: this.state.MandalArtData[tableIndex][dataIndex],\n          onChange: e => this.onChange(tableIndex, dataIndex, e),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        });\n      }));\n    }));\n  }\n\n}\n\n;\nexport default MandalArtTable;","map":{"version":3,"sources":["/Users/joohye/mandal-art/src/components/MandalArtTable.js"],"names":["React","Component","MandalArtTable","constructor","props","onChange","tableIndex","dataIndex","e","value","target","copyValues","state","MandalArtData","slice","setState","render","map","table","Math","random","data"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\n\nclass MandalArtTable extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            MandalArtData: [\n                [1, 2, 3, 4, 5, 6, 7, 8, 9],\n                [1, 2, 3, 4, 5, 6, 7, 8, 9],\n                [1, 2, 3, 4, 5, 6, 7, 8, 9],\n                ['하이', 2, 3, 4, 5, 6, 7, 8, 9],\n                [1, 2, 3, 4, 5, 6, 7, 8, 9],\n                [1, 2, 3, 4, 5, 6, 7, 8, 9],\n                [1, 2, 3, 4, 5, 6, 7, 8, 9],\n                [1, 2, 3, 4, 5, 6, 7, 8, 9],\n                [1, 2, 3, 4, 5, 6, 7, 8, 9]\n            ],\n        }\n    }\n\n    onChange = (tableIndex,dataIndex,e) => {\n\n        const { value } = e.target;\n\n        let copyValues = this.state.MandalArtData.slice();\n        // make the changes to the copied array\n        copyValues[tableIndex][dataIndex] = value; //false or whatever\n\n        this.setState({MandalArtData : copyValues});\n    }\n\n\n    render() {\n        return (\n            <div className=\"grid outer-grid justify-between\">\n                {this.state.MandalArtData.map((table, tableIndex) => {\n                    return (\n                        <div className=\"grid inner-grid justify-between items-center\" key={tableIndex + Math.random()}>\n\n                            {/*<textarea value={this.state.aa} onChange={this.onChange}/>*/}\n                            {/*<textarea value={this.state.ab} onChange={this.onChange}/>*/}\n                            {/*<textarea value={this.state.ac} onChange={this.onChange}/>*/}\n                            {/*<textarea value={this.state.ba} onChange={this.onChange}/>*/}\n                            {/*<textarea value={this.state.bb} onChange={this.onChange}/>*/}\n                            {/*<textarea value={this.state.bc} onChange={this.onChange}/>*/}\n                            {/*<textarea value={this.state.ca} onChange={this.onChange}/>*/}\n                            {/*<textarea value={this.state.cb} onChange={this.onChange}/>*/}\n                            {/*<textarea value={this.state.cc} onChange={this.onChange}/>*/}\n\n\n                            {table.map((data, dataIndex) => {\n                                return (\n                                    <input className=\"mandal-input\" key={data + dataIndex + tableIndex} placeholder=\"목표\" value={this.state.MandalArtData[tableIndex][dataIndex]} onChange={(e) => this.onChange(tableIndex,dataIndex,e)}/>\n                                );\n                            })}\n                        </div>\n                    );\n                })}\n            </div>\n\n        );\n    }\n};\n\nexport default MandalArtTable;"]},"metadata":{},"sourceType":"module"}