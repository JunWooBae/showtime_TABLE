{"ast":null,"code":"var _jsxFileName = \"/Users/joohye/mandal-art/src/components/header/Header.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport * as firebase from \"firebase\";\nimport Nav from './Nav';\n\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onScroll = e => {\n      // 스크롤 할때마다 state에 scroll한 만큼 scrollTop 값 증가하므로 이를 업데이트해줌,\n      //따라서 스크롤 시점에 따라 특정액션을 추후에 state를 활용하여 구현 가능\n      const scrollTop = window.scrollY; // this.setState({ scrollTop:scrollTop });\n    };\n\n    this.onLogin = e => {\n      e.preventDefault();\n      firebase.auth().setPersistence(firebase.auth.Auth.Persistence.LOCAL).then(() => {\n        var provider = new firebase.auth.GoogleAuthProvider();\n        return firebase.auth().signInWithPopup(provider).then(authData => {\n          this.setState({\n            user: authData\n          });\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.onLogout = e => {\n      e.preventDefault();\n      firebase.auth().signOut().then(() => {\n        this.setState({\n          user: null\n        });\n      }).catch(function (error) {\n        console.log(error);\n      });\n      window.location.href = '/';\n    };\n\n    this.onNav = () => {\n      this.setState(prevState => {\n        return {\n          isNav: !prevState.isNav\n        };\n      });\n    };\n\n    this.onScroll = e => {\n      if (document.getElementById(\"root\").scrollTo(0, 1000)) {\n        return 'bg-white';\n      }\n    };\n\n    this.state = {\n      user: localStorage.getItem('logInfo'),\n      isNav: false,\n      scrollTop: 0\n    };\n  }\n\n  componentDidMount() {\n    // 스크롤 이벤트 적용\n    window.addEventListener('scroll', this.onScroll);\n  } // shouldComponentUpdate(nextProps, nextState) {\n  //     //example 특정컴포넌트의 최상단(top)이 스크롤하여 가려져서 안보이게 되면(top<0) 특정 액션 실행하는 메소드\n  //     const top = window.scrollY;\n  //     console.log(top);\n  //     return true;\n  // }\n\n\n  componentWillUpdate(nextProps, nextState, nextContext) {\n    if (nextState.user) {\n      localStorage.setItem('logInfo', JSON.stringify(nextState.user));\n    } else {\n      localStorage.removeItem('logInfo');\n    }\n  }\n\n  render() {\n    let userInfo = JSON.parse(localStorage.getItem('logInfo'));\n    let nav;\n\n    if (this.state.isNav) {\n      nav = React.createElement(Nav, {\n        userInfo: userInfo.user,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"section\", {\n      className: \"header-section\",\n      className: this.onScroll,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"header-container flex justify-center justify-between items-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(Link, {\n      className: \"flex justify-center items-center\",\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"header-icon mr-10\",\n      src: require(\"../../images/icon/puzzle.svg\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"header-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"blue\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"M\"), \"andal-\", React.createElement(\"span\", {\n      className: \"yellow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"A\"), \"RT\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, userInfo ? React.createElement(React.Fragment, null, React.createElement(\"img\", {\n      className: \"cursor-pointer profile-img\",\n      src: userInfo.user.photoURL,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"cursor-pointer\",\n      onClick: this.onLogout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"\\uB85C\\uADF8\\uC544\\uC6C3\")) : React.createElement(\"span\", {\n      className: \"cursor-pointer\",\n      onClick: this.onLogin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"\\uB85C\\uADF8\\uC778\"))));\n  }\n\n}\n\nexport default Header;","map":{"version":3,"sources":["/Users/joohye/mandal-art/src/components/header/Header.js"],"names":["React","Component","Link","firebase","Nav","Header","constructor","props","onScroll","e","scrollTop","window","scrollY","onLogin","preventDefault","auth","setPersistence","Auth","Persistence","LOCAL","then","provider","GoogleAuthProvider","signInWithPopup","authData","setState","user","catch","error","console","log","onLogout","signOut","location","href","onNav","prevState","isNav","document","getElementById","scrollTo","state","localStorage","getItem","componentDidMount","addEventListener","componentWillUpdate","nextProps","nextState","nextContext","setItem","JSON","stringify","removeItem","render","userInfo","parse","nav","require","photoURL"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\nimport * as firebase from \"firebase\";\n\nimport Nav from './Nav';\n\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            user: localStorage.getItem('logInfo'),\n            isNav: false,\n            scrollTop:0,\n        }\n    }\n    componentDidMount() {\n        // 스크롤 이벤트 적용\n        window.addEventListener('scroll', this.onScroll);\n    }\n    // shouldComponentUpdate(nextProps, nextState) {\n    //     //example 특정컴포넌트의 최상단(top)이 스크롤하여 가려져서 안보이게 되면(top<0) 특정 액션 실행하는 메소드\n    //     const top = window.scrollY;\n    //     console.log(top);\n    //     return true;\n    // }\n    onScroll = (e) => {\n        // 스크롤 할때마다 state에 scroll한 만큼 scrollTop 값 증가하므로 이를 업데이트해줌,\n        //따라서 스크롤 시점에 따라 특정액션을 추후에 state를 활용하여 구현 가능\n        const scrollTop = window.scrollY;\n        \n        // this.setState({ scrollTop:scrollTop });\n    };\n    componentWillUpdate(nextProps, nextState, nextContext) {\n        if (nextState.user) {\n            localStorage.setItem('logInfo', JSON.stringify(nextState.user));\n        } else {\n            localStorage.removeItem('logInfo');\n        }\n    }\n\n    onLogin = (e) => {\n        e.preventDefault();\n        firebase.auth().setPersistence(firebase.auth.Auth.Persistence.LOCAL).then(() => {\n            var provider = new firebase.auth.GoogleAuthProvider();\n            return firebase.auth().signInWithPopup(provider).then((authData) => {\n                this.setState({\n                    user: authData\n                });\n            });\n        }).catch((error) => {\n            console.log(error);\n        });\n    }\n\n\n    onLogout = (e) => {\n        e.preventDefault();\n\n        firebase.auth().signOut().then(() => {\n            this.setState({\n                user: null\n            });\n        }).catch(function (error) {\n            console.log(error);\n        });\n        window.location.href='/';\n    }\n\n    onNav = () => {\n        this.setState((prevState)=>{\n            return{\n                isNav: !prevState.isNav\n            }\n        });\n    }\n    onScroll=(e)=>{\n        if(document.getElementById(\"root\").scrollTo(0, 1000)){\n            return 'bg-white';\n        }\n    }\n\n\n    render() {\n        let userInfo = JSON.parse(localStorage.getItem('logInfo'));\n        let nav;\n\n        if(this.state.isNav){\n            nav=<Nav userInfo={userInfo.user}></Nav>;\n        }\n\n        return (\n            <section className=\"header-section\" className={this.onScroll}>\n                <div className=\"header-container flex justify-center justify-between items-center\">\n                    <Link className=\"flex justify-center items-center\" to=\"/\">\n                        <img className=\"header-icon mr-10\" src={require(\"../../images/icon/puzzle.svg\")}/>\n                        <div className=\"header-name\"><span className=\"blue\">M</span>andal-<span\n                            className=\"yellow\">A</span>RT\n                        </div>\n                    </Link>\n                    <div>\n                        {\n                            userInfo ?\n                                <>\n                                    <img className=\"cursor-pointer profile-img\" src={userInfo.user.photoURL}/>\n                                    <span className=\"cursor-pointer\" onClick={this.onLogout}>로그아웃</span>\n\n                                    {/*<Nav userInfo={userInfo.user}/>*/}\n                                </>\n                                : <span className=\"cursor-pointer\" onClick={this.onLogin}>로그인</span>\n                        }\n\n                    </div>\n                </div>\n            </section>\n        )\n    }\n}\n\nexport default Header;"]},"metadata":{},"sourceType":"module"}