{"ast":null,"code":"var _jsxFileName = \"/Users/joohye/mandal-art/src/components/auth/Sign.js\";\nimport React, { Component } from 'react';\nimport firebase from '../../firebase';\n\nclass Sign extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onLogin = () => {\n      var provider = new firebase.auth.GoogleAuthProvider();\n      firebase.auth().signInWithPopup(provider).then(function (result) {\n        // This gives you a Google Access Token. You can use it to access the Google API.\n        var token = result.credential.accessToken; // The signed-in user info.\n\n        var user = result.user; // ...\n      }).catch(function (error) {\n        // Handle Errors here.\n        var errorCode = error.code;\n        var errorMessage = error.message; // The email of the user's account used.\n\n        var email = error.email; // The firebase.auth.AuthCredential type that was used.\n\n        var credential = error.credential; // ...\n      });\n      firebase.auth().onAuthStateChanged(function (user) {\n        if (user) {\n          // User is signed in.\n          var displayName = user.displayName;\n          var email = user.email;\n          var emailVerified = user.emailVerified;\n          var photoURL = user.photoURL;\n          var isAnonymous = user.isAnonymous;\n          var uid = user.uid;\n          var providerData = user.providerData; // ...\n        } else {// User is signed out.\n            // ...\n          }\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"button\", {\n      onClick: this.onLogin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"\\uAD6C\\uAE00 \\uB85C\\uADF8\\uC778\");\n  }\n\n}\n\nexport default Sign;","map":{"version":3,"sources":["/Users/joohye/mandal-art/src/components/auth/Sign.js"],"names":["React","Component","firebase","Sign","onLogin","provider","auth","GoogleAuthProvider","signInWithPopup","then","result","token","credential","accessToken","user","catch","error","errorCode","code","errorMessage","message","email","onAuthStateChanged","displayName","emailVerified","photoURL","isAnonymous","uid","providerData","render"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAOC,QAAP,MAAqB,gBAArB;;AAEA,MAAMC,IAAN,SAAmBF,SAAnB,CAA4B;AAAA;AAAA;;AAAA,SAExBG,OAFwB,GAEhB,MAAI;AACR,UAAIC,QAAQ,GAAG,IAAIH,QAAQ,CAACI,IAAT,CAAcC,kBAAlB,EAAf;AAEAL,MAAAA,QAAQ,CAACI,IAAT,GAAgBE,eAAhB,CAAgCH,QAAhC,EAA0CI,IAA1C,CAA+C,UAASC,MAAT,EAAiB;AAC5D;AACA,YAAIC,KAAK,GAAGD,MAAM,CAACE,UAAP,CAAkBC,WAA9B,CAF4D,CAG5D;;AACA,YAAIC,IAAI,GAAGJ,MAAM,CAACI,IAAlB,CAJ4D,CAK5D;AACH,OAND,EAMGC,KANH,CAMS,UAASC,KAAT,EAAgB;AACrB;AACA,YAAIC,SAAS,GAAGD,KAAK,CAACE,IAAtB;AACA,YAAIC,YAAY,GAAGH,KAAK,CAACI,OAAzB,CAHqB,CAIrB;;AACA,YAAIC,KAAK,GAAGL,KAAK,CAACK,KAAlB,CALqB,CAMrB;;AACA,YAAIT,UAAU,GAAGI,KAAK,CAACJ,UAAvB,CAPqB,CAQrB;AACH,OAfD;AAiBAV,MAAAA,QAAQ,CAACI,IAAT,GAAgBgB,kBAAhB,CAAmC,UAASR,IAAT,EAAe;AAC9C,YAAIA,IAAJ,EAAU;AACN;AACA,cAAIS,WAAW,GAAGT,IAAI,CAACS,WAAvB;AACA,cAAIF,KAAK,GAAGP,IAAI,CAACO,KAAjB;AACA,cAAIG,aAAa,GAAGV,IAAI,CAACU,aAAzB;AACA,cAAIC,QAAQ,GAAGX,IAAI,CAACW,QAApB;AACA,cAAIC,WAAW,GAAGZ,IAAI,CAACY,WAAvB;AACA,cAAIC,GAAG,GAAGb,IAAI,CAACa,GAAf;AACA,cAAIC,YAAY,GAAGd,IAAI,CAACc,YAAxB,CARM,CASN;AACH,SAVD,MAUO,CACH;AACA;AACH;AACJ,OAfD;AAgBH,KAtCuB;AAAA;;AAwCxBC,EAAAA,MAAM,GAAE;AACJ,WACI;AAAQ,MAAA,OAAO,EAAE,KAAKzB,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCADJ;AAGH;;AA5CuB;;AA+C5B,eAAeD,IAAf","sourcesContent":["import React,{Component} from 'react';\nimport firebase from '../../firebase';\n\nclass Sign extends Component{\n\n    onLogin=()=>{\n        var provider = new firebase.auth.GoogleAuthProvider();\n\n        firebase.auth().signInWithPopup(provider).then(function(result) {\n            // This gives you a Google Access Token. You can use it to access the Google API.\n            var token = result.credential.accessToken;\n            // The signed-in user info.\n            var user = result.user;\n            // ...\n        }).catch(function(error) {\n            // Handle Errors here.\n            var errorCode = error.code;\n            var errorMessage = error.message;\n            // The email of the user's account used.\n            var email = error.email;\n            // The firebase.auth.AuthCredential type that was used.\n            var credential = error.credential;\n            // ...\n        });\n\n        firebase.auth().onAuthStateChanged(function(user) {\n            if (user) {\n                // User is signed in.\n                var displayName = user.displayName;\n                var email = user.email;\n                var emailVerified = user.emailVerified;\n                var photoURL = user.photoURL;\n                var isAnonymous = user.isAnonymous;\n                var uid = user.uid;\n                var providerData = user.providerData;\n                // ...\n            } else {\n                // User is signed out.\n                // ...\n            }\n        });\n    }\n\n    render(){\n        return(\n            <button onClick={this.onLogin} >구글 로그인</button>\n        );\n    }\n}\n\nexport default Sign;"]},"metadata":{},"sourceType":"module"}