{"ast":null,"code":"var _jsxFileName = \"/Users/joohye/mandal-art/src/components/MandalArtTable.js\";\nimport React, { Component } from 'react';\nimport { Map, List } from 'immutable';\n\nclass MandalArtTable extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = (e, tableIndex, dataIndex) => {\n      const value = e.target.value; // let copyValues = [...this.state.MandalArtData];\n\n      copyValues.setIn([tableIndex, dataIndex], value); // copyValues[tableIndex][dataIndex] = value;\n\n      this.setState({\n        MandalArtData: copyValues\n      });\n    };\n\n    this.state = {\n      // MandalArtData: [\n      //     [1, 2, 3, 4, 5, 6, 7, 8, 9],\n      //     [1, 2, 3, 4, 5, 6, 7, 8, 9],\n      //     [1, 2, 3, 4, 5, 6, 7, 8, 9],\n      //     ['하이', 2, 3, 4, 5, 6, 7, 8, 9],\n      //     [1, 2, 3, 4, 5, 6, 7, 8, 9],\n      //     [1, 2, 3, 4, 5, 6, 7, 8, 9],\n      //     [1, 2, 3, 4, 5, 6, 7, 8, 9],\n      //     [1, 2, 3, 4, 5, 6, 7, 8, 9],\n      //     [1, 2, 3, 4, 5, 6, 7, 8, 9]\n      // ],\n      MandalArtData: List(List([1, 2, 3, 4, 5, 6, 7, 8, 9]), List([1, 2, 3, 4, 5, 6, 7, 8, 9]), List([1, 2, 3, 4, 5, 6, 7, 8, 9]), List([1, 2, 3, 4, 5, 6, 7, 8, 9]), List([1, 2, 3, 4, 5, 6, 7, 8, 9]), List([1, 2, 3, 4, 5, 6, 7, 8, 9]), List([1, 2, 3, 4, 5, 6, 7, 8, 9]), List([1, 2, 3, 4, 5, 6, 7, 8, 9]), List([1, 2, 3, 4, 5, 6, 7, 8, 9]))\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"grid outer-grid justify-between\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, this.state.MandalArtData.map((table, tableIndex) => {\n      return React.createElement(\"div\", {\n        className: \"grid inner-grid justify-between items-center\",\n        key: tableIndex,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, table.map((data, dataIndex) => {\n        return React.createElement(\"input\", {\n          className: \"mandal-input\",\n          id: [dataIndex, tableIndex].join('_'),\n          key: [dataIndex, tableIndex].join('_'),\n          placeholder: \"\\uBAA9\\uD45C\",\n          value: data,\n          onChange: e => this.onChange(e, tableIndex, dataIndex),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        });\n      }));\n    }));\n  }\n\n}\n\n;\nexport default MandalArtTable;","map":{"version":3,"sources":["/Users/joohye/mandal-art/src/components/MandalArtTable.js"],"names":["React","Component","Map","List","MandalArtTable","constructor","props","onChange","e","tableIndex","dataIndex","value","target","copyValues","setIn","setState","MandalArtData","state","render","map","table","data","join"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport { Map,List } from 'immutable';\n\nclass MandalArtTable extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            // MandalArtData: [\n            //     [1, 2, 3, 4, 5, 6, 7, 8, 9],\n            //     [1, 2, 3, 4, 5, 6, 7, 8, 9],\n            //     [1, 2, 3, 4, 5, 6, 7, 8, 9],\n            //     ['하이', 2, 3, 4, 5, 6, 7, 8, 9],\n            //     [1, 2, 3, 4, 5, 6, 7, 8, 9],\n            //     [1, 2, 3, 4, 5, 6, 7, 8, 9],\n            //     [1, 2, 3, 4, 5, 6, 7, 8, 9],\n            //     [1, 2, 3, 4, 5, 6, 7, 8, 9],\n            //     [1, 2, 3, 4, 5, 6, 7, 8, 9]\n            // ],\n            MandalArtData : List(\n                List([1, 2, 3, 4, 5, 6, 7, 8, 9]),\n                List([1, 2, 3, 4, 5, 6, 7, 8, 9]),\n                List([1, 2, 3, 4, 5, 6, 7, 8, 9]),\n                List([1, 2, 3, 4, 5, 6, 7, 8, 9]),\n                List([1, 2, 3, 4, 5, 6, 7, 8, 9]),\n                List([1, 2, 3, 4, 5, 6, 7, 8, 9]),\n                List([1, 2, 3, 4, 5, 6, 7, 8, 9]),\n                List([1, 2, 3, 4, 5, 6, 7, 8, 9]),\n                List([1, 2, 3, 4, 5, 6, 7, 8, 9]),\n            )\n        }\n    }\n\n    onChange = (e,tableIndex,dataIndex) => {\n\n        const { value } = e.target;\n\n        // let copyValues = [...this.state.MandalArtData];\n\n        copyValues.setIn([tableIndex, dataIndex], value);\n\n        // copyValues[tableIndex][dataIndex] = value;\n\n        this.setState({MandalArtData : copyValues});\n\n    }\n\n\n    render() {\n        return (\n            <div className=\"grid outer-grid justify-between\">\n                {this.state.MandalArtData.map((table, tableIndex) => {\n                    return (\n                        <div className=\"grid inner-grid justify-between items-center\" key={tableIndex}>\n\n                            {/*<textarea value={this.state.aa} onChange={this.onChange}/>*/}\n                            {/*<textarea value={this.state.ab} onChange={this.onChange}/>*/}\n                            {/*<textarea value={this.state.ac} onChange={this.onChange}/>*/}\n                            {/*<textarea value={this.state.ba} onChange={this.onChange}/>*/}\n                            {/*<textarea value={this.state.bb} onChange={this.onChange}/>*/}\n                            {/*<textarea value={this.state.bc} onChange={this.onChange}/>*/}\n                            {/*<textarea value={this.state.ca} onChange={this.onChange}/>*/}\n                            {/*<textarea value={this.state.cb} onChange={this.onChange}/>*/}\n                            {/*<textarea value={this.state.cc} onChange={this.onChange}/>*/}\n\n\n                            {table.map((data, dataIndex) => {\n                                return (\n                                    <input className=\"mandal-input\" id={[dataIndex,tableIndex].join('_')} key={[dataIndex,tableIndex].join('_')} placeholder=\"목표\" value={data} onChange={(e) => this.onChange(e,tableIndex,dataIndex)}/>\n                                );\n                            })}\n                        </div>\n                    );\n                })}\n            </div>\n\n        );\n    }\n};\n\nexport default MandalArtTable;"]},"metadata":{},"sourceType":"module"}