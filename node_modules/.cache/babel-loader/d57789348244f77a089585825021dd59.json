{"ast":null,"code":"var _jsxFileName = \"/Users/joohye/mandal-art/src/components/MandalArtTable.js\";\nimport React, { Component } from 'react';\n\nclass MandalArtTable extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = (e, tableIndex, dataIndex) => {\n      const value = e.target.value;\n      let copyValues = this.state.MandalArtData.slice(); // make the changes to the copied array\n\n      copyValues[tableIndex][dataIndex] = value; //false or whatever\n\n      this.setState({\n        MandalArtData: copyValues\n      });\n    };\n\n    this.state = {\n      MandalArtData: [1, 2, 3, 4, 5, 6, 7, 8, 9 // [1, 2, 3, 4, 5, 6, 7, 8, 9],\n      // [1, 2, 3, 4, 5, 6, 7, 8, 9],\n      // [1, 2, 3, 4, 5, 6, 7, 8, 9],\n      // ['하이', 2, 3, 4, 5, 6, 7, 8, 9],\n      // [1, 2, 3, 4, 5, 6, 7, 8, 9],\n      // [1, 2, 3, 4, 5, 6, 7, 8, 9],\n      // [1, 2, 3, 4, 5, 6, 7, 8, 9],\n      // [1, 2, 3, 4, 5, 6, 7, 8, 9],\n      // [1, 2, 3, 4, 5, 6, 7, 8, 9]\n      ]\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"grid outer-grid justify-between\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, this.state.MandalArtData.map((table, tableIndex) => {\n      return React.createElement(\"div\", {\n        className: \"grid inner-grid justify-between items-center\",\n        key: table + tableIndex,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, table.map((data, dataIndex) => {\n        return React.createElement(\"input\", {\n          className: \"mandal-input\",\n          key: data + dataIndex + tableIndex,\n          placeholder: \"\\uBAA9\\uD45C\",\n          value: data,\n          onChange: e => this.onChange(e, tableIndex, dataIndex),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        });\n      }));\n    }));\n  }\n\n}\n\n;\nexport default MandalArtTable;","map":{"version":3,"sources":["/Users/joohye/mandal-art/src/components/MandalArtTable.js"],"names":["React","Component","MandalArtTable","constructor","props","onChange","e","tableIndex","dataIndex","value","target","copyValues","state","MandalArtData","slice","setState","render","map","table","data"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;AAEA,MAAMC,cAAN,SAA6BD,SAA7B,CAAuC;AAEnCE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAkBnBC,QAlBmB,GAkBR,CAACC,CAAD,EAAGC,UAAH,EAAcC,SAAd,KAA4B;AAAA,YAE3BC,KAF2B,GAEjBH,CAAC,CAACI,MAFe,CAE3BD,KAF2B;AAInC,UAAIE,UAAU,GAAG,KAAKC,KAAL,CAAWC,aAAX,CAAyBC,KAAzB,EAAjB,CAJmC,CAKnC;;AACAH,MAAAA,UAAU,CAACJ,UAAD,CAAV,CAAuBC,SAAvB,IAAoCC,KAApC,CANmC,CAMQ;;AAE3C,WAAKM,QAAL,CAAc;AAACF,QAAAA,aAAa,EAAGF;AAAjB,OAAd;AAEH,KA5BkB;;AAEf,SAAKC,KAAL,GAAa;AACTC,MAAAA,aAAa,EAAE,CACX,CADW,EACR,CADQ,EACL,CADK,EACF,CADE,EACC,CADD,EACI,CADJ,EACO,CADP,EACU,CADV,EACa,CADb,CAEX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVW;AADN,KAAb;AAcH;;AAeDG,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKJ,KAAL,CAAWC,aAAX,CAAyBI,GAAzB,CAA6B,CAACC,KAAD,EAAQX,UAAR,KAAuB;AACjD,aACI;AAAK,QAAA,SAAS,EAAC,8CAAf;AAA8D,QAAA,GAAG,EAAEW,KAAK,GAAGX,UAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAaKW,KAAK,CAACD,GAAN,CAAU,CAACE,IAAD,EAAOX,SAAP,KAAqB;AAC5B,eACI;AAAO,UAAA,SAAS,EAAC,cAAjB;AAAgC,UAAA,GAAG,EAAEW,IAAI,GAAGX,SAAP,GAAmBD,UAAxD;AAAoE,UAAA,WAAW,EAAC,cAAhF;AAAqF,UAAA,KAAK,EAAEY,IAA5F;AAAkG,UAAA,QAAQ,EAAGb,CAAD,IAAO,KAAKD,QAAL,CAAcC,CAAd,EAAgBC,UAAhB,EAA2BC,SAA3B,CAAnH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH,OAJA,CAbL,CADJ;AAqBH,KAtBA,CADL,CADJ;AA4BH;;AA9DkC;;AA+DtC;AAED,eAAeN,cAAf","sourcesContent":["import React, {Component} from 'react';\n\nclass MandalArtTable extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            MandalArtData: [\n                1, 2, 3, 4, 5, 6, 7, 8, 9\n                // [1, 2, 3, 4, 5, 6, 7, 8, 9],\n                // [1, 2, 3, 4, 5, 6, 7, 8, 9],\n                // [1, 2, 3, 4, 5, 6, 7, 8, 9],\n                // ['하이', 2, 3, 4, 5, 6, 7, 8, 9],\n                // [1, 2, 3, 4, 5, 6, 7, 8, 9],\n                // [1, 2, 3, 4, 5, 6, 7, 8, 9],\n                // [1, 2, 3, 4, 5, 6, 7, 8, 9],\n                // [1, 2, 3, 4, 5, 6, 7, 8, 9],\n                // [1, 2, 3, 4, 5, 6, 7, 8, 9]\n            ],\n        }\n    }\n\n    onChange = (e,tableIndex,dataIndex) => {\n\n        const { value } = e.target;\n\n        let copyValues = this.state.MandalArtData.slice();\n        // make the changes to the copied array\n        copyValues[tableIndex][dataIndex] = value; //false or whatever\n\n        this.setState({MandalArtData : copyValues});\n\n    }\n\n\n    render() {\n        return (\n            <div className=\"grid outer-grid justify-between\">\n                {this.state.MandalArtData.map((table, tableIndex) => {\n                    return (\n                        <div className=\"grid inner-grid justify-between items-center\" key={table + tableIndex}>\n\n                            {/*<textarea value={this.state.aa} onChange={this.onChange}/>*/}\n                            {/*<textarea value={this.state.ab} onChange={this.onChange}/>*/}\n                            {/*<textarea value={this.state.ac} onChange={this.onChange}/>*/}\n                            {/*<textarea value={this.state.ba} onChange={this.onChange}/>*/}\n                            {/*<textarea value={this.state.bb} onChange={this.onChange}/>*/}\n                            {/*<textarea value={this.state.bc} onChange={this.onChange}/>*/}\n                            {/*<textarea value={this.state.ca} onChange={this.onChange}/>*/}\n                            {/*<textarea value={this.state.cb} onChange={this.onChange}/>*/}\n                            {/*<textarea value={this.state.cc} onChange={this.onChange}/>*/}\n\n\n                            {table.map((data, dataIndex) => {\n                                return (\n                                    <input className=\"mandal-input\" key={data + dataIndex + tableIndex} placeholder=\"목표\" value={data} onChange={(e) => this.onChange(e,tableIndex,dataIndex)}/>\n                                );\n                            })}\n                        </div>\n                    );\n                })}\n            </div>\n\n        );\n    }\n};\n\nexport default MandalArtTable;"]},"metadata":{},"sourceType":"module"}