{"ast":null,"code":"import React, { Component } from 'react';\nimport * as firebase from \"firebase\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport { connect } from 'react-redux';\nimport * as actions from '../../redux/actions/index';\n\nclass Sign extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onLogin = e => {\n      // const {dispatchLogin}=this.props;\n      e.preventDefault();\n      firebase.auth().setPersistence(firebase.auth.Auth.Persistence.LOCAL).then(() => {\n        var provider = new firebase.auth.GoogleAuthProvider();\n        return firebase.auth().signInWithPopup(provider).then(authData => {\n          this.setState({\n            user: authData\n          }); // dispatchLogin();\n          // this.props.history.push('/');\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.onLogout = e => {\n      // const {dispatchLogout}=this.props;\n      e.preventDefault();\n      firebase.auth().signOut().then(() => {\n        this.setState({\n          user: null\n        }); // dispatchLogout();\n        // this.props.history.push('/');\n      }).catch(function (error) {\n        console.log(error);\n      });\n    };\n\n    this.state = {\n      user: localStorage.getItem('logInfo')\n    };\n  }\n\n  componentWillUpdate(nextProps, nextState, nextContext) {\n    localStorage.setItem('logInfo', JSON.stringify(nextState.user));\n  }\n\n  render() {// const { user } = this.props;\n    // return (\n    //     <section className=\"login-section\">\n    //         {\n    //             this.state.user ?\n    //             (<button onClick={this.onLogout}>로그아웃</button>) :\n    //             (<button onClick={this.onLogin}>로그인</button>)\n    //\n    //         }\n    //     </section>\n    // );\n  }\n\n}\n\nexport default Sign; // export default connect(\n//     state => ({ user: state.user }),\n//     dispatch=>({\n//         dispatchLogin:()=>{dispatch(actions.login)},\n//         dispatchLogout:()=>{dispatch(actions.logout)}\n//     })\n// )(Sign);","map":{"version":3,"sources":["/Users/joohye/mandal-art/src/components/auth/Sign.js"],"names":["React","Component","firebase","connect","actions","Sign","constructor","props","onLogin","e","preventDefault","auth","setPersistence","Auth","Persistence","LOCAL","then","provider","GoogleAuthProvider","signInWithPopup","authData","setState","user","catch","error","console","log","onLogout","signOut","state","localStorage","getItem","componentWillUpdate","nextProps","nextState","nextContext","setItem","JSON","stringify","render"],"mappings":"AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,KAAKC,QAAZ,MAA0B,UAA1B;AACA,OAAO,eAAP;AACA,OAAO,oBAAP;AAEA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAO,KAAKC,OAAZ,MAAyB,2BAAzB;;AAEA,MAAMC,IAAN,SAAmBJ,SAAnB,CAA6B;AACzBK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAWnBC,OAXmB,GAWRC,CAAD,IAAO;AACb;AAEAA,MAAAA,CAAC,CAACC,cAAF;AACAR,MAAAA,QAAQ,CAACS,IAAT,GAAgBC,cAAhB,CAA+BV,QAAQ,CAACS,IAAT,CAAcE,IAAd,CAAmBC,WAAnB,CAA+BC,KAA9D,EACKC,IADL,CACU,MAAM;AACR,YAAIC,QAAQ,GAAG,IAAIf,QAAQ,CAACS,IAAT,CAAcO,kBAAlB,EAAf;AACA,eAAOhB,QAAQ,CAACS,IAAT,GAAgBQ,eAAhB,CAAgCF,QAAhC,EACFD,IADE,CACII,QAAD,IAAc;AAChB,eAAKC,QAAL,CAAc;AACVC,YAAAA,IAAI,EAACF;AADK,WAAd,EADgB,CAIhB;AAEA;AACH,SARE,CAAP;AASH,OAZL,EAaKG,KAbL,CAaYC,KAAD,IAAW;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,OAfL;AAiBH,KAhCkB;;AAAA,SAkCnBG,QAlCmB,GAkCPlB,CAAD,IAAO;AACd;AACAA,MAAAA,CAAC,CAACC,cAAF;AAEAR,MAAAA,QAAQ,CAACS,IAAT,GAAgBiB,OAAhB,GAA0BZ,IAA1B,CAA+B,MAAM;AACjC,aAAKK,QAAL,CAAc;AACVC,UAAAA,IAAI,EAAC;AADK,SAAd,EADiC,CAIjC;AAEA;AAEH,OARD,EAQGC,KARH,CAQS,UAAUC,KAAV,EAAiB;AACtBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,OAVD;AAYH,KAlDkB;;AAEf,SAAKK,KAAL,GAAY;AACRP,MAAAA,IAAI,EAAEQ,YAAY,CAACC,OAAb,CAAqB,SAArB;AADE,KAAZ;AAGH;;AAEDC,EAAAA,mBAAmB,CAACC,SAAD,EAAYC,SAAZ,EAAuBC,WAAvB,EAAoC;AACnDL,IAAAA,YAAY,CAACM,OAAb,CAAqB,SAArB,EAAgCC,IAAI,CAACC,SAAL,CAAeJ,SAAS,CAACZ,IAAzB,CAAhC;AACH;;AA2CDiB,EAAAA,MAAM,GAAG,CACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH;;AAjEwB;;AAsE7B,eAAelC,IAAf,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, {Component} from 'react';\nimport * as firebase from \"firebase\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n\nimport {connect} from 'react-redux';\nimport * as actions from '../../redux/actions/index';\n\nclass Sign extends Component {\n    constructor(props) {\n        super(props);\n        this.state= {\n            user: localStorage.getItem('logInfo')\n        };\n    }\n\n    componentWillUpdate(nextProps, nextState, nextContext) {\n        localStorage.setItem('logInfo', JSON.stringify(nextState.user));\n    }\n\n    onLogin = (e) => {\n        // const {dispatchLogin}=this.props;\n\n        e.preventDefault();\n        firebase.auth().setPersistence(firebase.auth.Auth.Persistence.LOCAL)\n            .then(() => {\n                var provider = new firebase.auth.GoogleAuthProvider();\n                return firebase.auth().signInWithPopup(provider)\n                    .then((authData) => {\n                        this.setState({\n                            user:authData\n                        });\n                        // dispatchLogin();\n\n                        // this.props.history.push('/');\n                    });\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n\n    }\n\n    onLogout = (e) => {\n        // const {dispatchLogout}=this.props;\n        e.preventDefault();\n\n        firebase.auth().signOut().then(() => {\n            this.setState({\n                user:null\n            });\n            // dispatchLogout();\n\n            // this.props.history.push('/');\n\n        }).catch(function (error) {\n            console.log(error);\n        });\n\n    }\n\n    render() {\n        // const { user } = this.props;\n        // return (\n        //     <section className=\"login-section\">\n        //         {\n        //             this.state.user ?\n        //             (<button onClick={this.onLogout}>로그아웃</button>) :\n        //             (<button onClick={this.onLogin}>로그인</button>)\n        //\n        //         }\n        //     </section>\n        // );\n    }\n\n}\n\n\nexport default Sign;\n// export default connect(\n//     state => ({ user: state.user }),\n//     dispatch=>({\n//         dispatchLogin:()=>{dispatch(actions.login)},\n//         dispatchLogout:()=>{dispatch(actions.logout)}\n//     })\n// )(Sign);\n"]},"metadata":{},"sourceType":"module"}